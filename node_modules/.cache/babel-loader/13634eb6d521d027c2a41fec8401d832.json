{"ast":null,"code":"var _jsxFileName = \"/Users/arpansahu/projects/profile/altered_datum/src/components/auth/register.js\";\nimport React, { useState } from 'react';\nimport axiosInstance from '../../axios';\nimport { useHistory } from 'react-router-dom'; // MaterialUI\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport HeaderForGuest from '../headerforguest';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  passwordEye: {\n    color: \"rgba(131,153,167,0.9)\",\n    opacity: 0.7\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n}));\nconst PASSWORD_REGEX = \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\";\nexport default function SignUp() {\n  const history = useHistory();\n  const classes = useStyles();\n  const initialFormData = {\n    email: '',\n    username: '',\n    password: '',\n    password_two: ''\n  };\n  const [formData, updateFormData] = useState(initialFormData);\n  const [passwordsMatch, updatePasswordsMatch] = useState({\n    errorOpen: false,\n    error: \"\"\n  });\n  const [hidePassword, setHidePassword] = useState(true);\n  const [hidePasswordTwo, setHidePasswordTwo] = useState(true);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (formData.password !== formData.password_two) {\n      updatePasswordsMatch({\n        errorOpen: true,\n        error: \"Both passwords should be the same\"\n      });\n      return;\n    }\n\n    axiosInstance.post(`user/create/`, {\n      email: formData.email,\n      username: formData.username,\n      password: formData.password\n    }).then(() => {\n      history.push('/login');\n    }).catch(error => {\n      let errorMsg = \"Your input details are incorrect\";\n\n      if (error.response) {\n        if (error.response.status === 403) {\n          errorMsg = \"User already registered\";\n        }\n      }\n\n      updatePasswordsMatch({\n        errorOpen: true,\n        error: errorMsg\n      });\n    });\n  };\n\n  const togglePasswordVisibility = toggleStateFunc => {\n    toggleStateFunc(prevState => !prevState);\n  };\n\n  const errorClose = () => {\n    updatePasswordsMatch({\n      errorOpen: false,\n      error: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderForGuest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    onChange: handleChange,\n    value: formData.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['This field is required', 'Email is not valid'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    name: \"username\",\n    value: formData.username,\n    autoComplete: \"username\",\n    onChange: handleChange,\n    validators: ['required'],\n    errorMessages: ['This field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    type: hidePassword ? \"password\" : \"input\",\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 45\n        }\n      }, hidePassword ? /*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: () => togglePasswordVisibility(setHidePassword),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 53\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: () => togglePasswordVisibility(setHidePassword),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 53\n        }\n      }))\n    },\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: handleChange,\n    value: formData.password,\n    validators: ['required', `matchRegexp:${PASSWORD_REGEX}`],\n    errorMessages: ['This field is required', 'The password must be strong with 8-20 characters, including upper and lower case letters, a number, and a special character.'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    type: hidePasswordTwo ? \"password\" : \"input\",\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 45\n        }\n      }, hidePasswordTwo ? /*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: () => togglePasswordVisibility(setHidePasswordTwo),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 53\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: () => togglePasswordVisibility(setHidePasswordTwo),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 53\n        }\n      }))\n    },\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password_two\",\n    label: \"Confirm Password\",\n    id: \"password_two\",\n    autoComplete: \"current-password\",\n    onChange: handleChange,\n    value: formData.password_two,\n    validators: ['required', `matchRegexp:${PASSWORD_REGEX}`],\n    errorMessages: ['This field is required', 'The password must be strong with 8-20 characters, including upper and lower case letters, a number, and a special character.'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  })), passwordsMatch.error && /*#__PURE__*/React.createElement(Snackbar, {\n    variant: \"error\",\n    key: passwordsMatch.error,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: passwordsMatch.errorOpen,\n    onClose: errorClose,\n    autoHideDuration: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes.error,\n    message: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ErrorIcon, {\n      fontSize: \"large\",\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 49\n      }\n    }, passwordsMatch.error)),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      onClick: errorClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 49\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"allowExtraEmails\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 46\n      }\n    }),\n    label: \"I want to receive inspiration, marketing promotions and updates via email.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"/login\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 33\n    }\n  }, \"Already have an account? Sign in\")))))));\n}","map":{"version":3,"sources":["/Users/arpansahu/projects/profile/altered_datum/src/components/auth/register.js"],"names":["React","useState","axiosInstance","useHistory","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Typography","makeStyles","Container","HeaderForGuest","ValidatorForm","TextValidator","VisibilityOffTwoToneIcon","VisibilityTwoToneIcon","InputAdornment","Snackbar","SnackbarContent","IconButton","ErrorIcon","CloseIcon","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","passwordEye","color","opacity","error","dark","PASSWORD_REGEX","SignUp","history","classes","initialFormData","email","username","password","password_two","formData","updateFormData","passwordsMatch","updatePasswordsMatch","errorOpen","hidePassword","setHidePassword","hidePasswordTwo","setHidePasswordTwo","handleChange","e","target","name","value","handleSubmit","preventDefault","post","then","push","catch","errorMsg","response","status","togglePasswordVisibility","toggleStateFunc","prevState","errorClose","endAdornment","vertical","horizontal","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axiosInstance from '../../axios';\nimport { useHistory } from 'react-router-dom';\n// MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport HeaderForGuest from '../headerforguest';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    passwordEye: {\n        color: \"rgba(131,153,167,0.9)\",\n        opacity: 0.7\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n}));\n\nconst PASSWORD_REGEX = \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\";\n\nexport default function SignUp() {\n    const history = useHistory();\n    const classes = useStyles();\n\n    const initialFormData = {\n        email: '',\n        username: '',\n        password: '',\n        password_two: '',\n    };\n\n    const [formData, updateFormData] = useState(initialFormData);\n    const [passwordsMatch, updatePasswordsMatch] = useState({ errorOpen: false, error: \"\" });\n    const [hidePassword, setHidePassword] = useState(true);\n    const [hidePasswordTwo, setHidePasswordTwo] = useState(true);\n\n    const handleChange = (e) => {\n        updateFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (formData.password !== formData.password_two) {\n            updatePasswordsMatch({ errorOpen: true, error: \"Both passwords should be the same\" });\n            return;\n        }\n\n        axiosInstance.post(`user/create/`, {\n            email: formData.email,\n            username: formData.username,\n            password: formData.password,\n        })\n            .then(() => {\n                history.push('/login');\n            })\n            .catch((error) => {\n                let errorMsg = \"Your input details are incorrect\";\n                if (error.response) {\n                    if (error.response.status === 403) {\n                        errorMsg = \"User already registered\";\n                    }\n                }\n                updatePasswordsMatch({ errorOpen: true, error: errorMsg });\n            });\n    };\n\n    const togglePasswordVisibility = (toggleStateFunc) => {\n        toggleStateFunc(prevState => !prevState);\n    };\n\n    const errorClose = () => {\n        updatePasswordsMatch({ errorOpen: false, error: \"\" });\n    };\n\n    return (\n        <div className=\"App\">\n            <HeaderForGuest />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}></Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <ValidatorForm className={classes.form} noValidate onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextValidator\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    onChange={handleChange}\n                                    value={formData.email}\n                                    validators={['required', 'isEmail']}\n                                    errorMessages={['This field is required', 'Email is not valid']}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextValidator\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    value={formData.username}\n                                    autoComplete=\"username\"\n                                    onChange={handleChange}\n                                    validators={['required']}\n                                    errorMessages={['This field is required']}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextValidator\n                                    type={hidePassword ? \"password\" : \"input\"}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                {hidePassword ? (\n                                                    <VisibilityOffTwoToneIcon\n                                                        fontSize=\"default\"\n                                                        className={classes.passwordEye}\n                                                        onClick={() => togglePasswordVisibility(setHidePassword)}\n                                                    />\n                                                ) : (\n                                                    <VisibilityTwoToneIcon\n                                                        fontSize=\"default\"\n                                                        className={classes.passwordEye}\n                                                        onClick={() => togglePasswordVisibility(setHidePassword)}\n                                                    />\n                                                )}\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={handleChange}\n                                    value={formData.password}\n                                    validators={['required', `matchRegexp:${PASSWORD_REGEX}`]}\n                                    errorMessages={[\n                                        'This field is required',\n                                        'The password must be strong with 8-20 characters, including upper and lower case letters, a number, and a special character.'\n                                    ]}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextValidator\n                                    type={hidePasswordTwo ? \"password\" : \"input\"}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                {hidePasswordTwo ? (\n                                                    <VisibilityOffTwoToneIcon\n                                                        fontSize=\"default\"\n                                                        className={classes.passwordEye}\n                                                        onClick={() => togglePasswordVisibility(setHidePasswordTwo)}\n                                                    />\n                                                ) : (\n                                                    <VisibilityTwoToneIcon\n                                                        fontSize=\"default\"\n                                                        className={classes.passwordEye}\n                                                        onClick={() => togglePasswordVisibility(setHidePasswordTwo)}\n                                                    />\n                                                )}\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password_two\"\n                                    label=\"Confirm Password\"\n                                    id=\"password_two\"\n                                    autoComplete=\"current-password\"\n                                    onChange={handleChange}\n                                    value={formData.password_two}\n                                    validators={['required', `matchRegexp:${PASSWORD_REGEX}`]}\n                                    errorMessages={[\n                                        'This field is required',\n                                        'The password must be strong with 8-20 characters, including upper and lower case letters, a number, and a special character.'\n                                    ]}\n                                />\n                            </Grid>\n                            {passwordsMatch.error && (\n                                <Snackbar\n                                    variant=\"error\"\n                                    key={passwordsMatch.error}\n                                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n                                    open={passwordsMatch.errorOpen}\n                                    onClose={errorClose}\n                                    autoHideDuration={3000}\n                                >\n                                    <SnackbarContent\n                                        className={classes.error}\n                                        message={\n                                            <div>\n                                                <ErrorIcon fontSize=\"large\" color=\"error\" />\n                                                <span style={{ marginLeft: \"8px\" }}>{passwordsMatch.error}</span>\n                                            </div>\n                                        }\n                                        action={[\n                                            <IconButton key=\"close\" aria-label=\"close\" onClick={errorClose}>\n                                                <CloseIcon color=\"inherit\" />\n                                            </IconButton>,\n                                        ]}\n                                    />\n                                </Snackbar>\n                            )}\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/login\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </ValidatorForm>\n                </div>\n            </Container>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}