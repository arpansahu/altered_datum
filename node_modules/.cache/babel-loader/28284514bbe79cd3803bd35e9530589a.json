{"ast":null,"code":"import axios from 'axios';\nconst base_url = process.env.REACT_APP_API_BASE_URL;\nconst baseURL = base_url + '/api/';\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('access_token') ? 'Bearer ' + localStorage.getItem('access_token') : null,\n    'Content-Type': 'application/json',\n    accept: 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n\n  if (typeof error.response === 'undefined') {\n    alert('A server/network error occurred. ' + 'Looks like CORS might be the problem. ' + 'Sorry about this - we will get it fixed shortly.');\n    return Promise.reject(error);\n  }\n\n  if (error.response.status === 401 && originalRequest.url === baseURL + 'token/refresh/') {\n    window.location.href = '/login/';\n    return Promise.reject(error);\n  }\n\n  if (error.response.data.code === 'token_not_valid' && error.response.status === 401 && error.response.statusText === 'Unauthorized') {\n    const refreshToken = localStorage.getItem('refresh_token');\n\n    if (refreshToken) {\n      const tokenParts = JSON.parse(atob(refreshToken.split('.')[1])); // exp date in token is expressed in seconds, while now() returns milliseconds:\n\n      const now = Math.ceil(Date.now() / 1000); // console.log(tokenParts.exp);\n\n      if (tokenParts.exp > now) {\n        return axiosInstance.post('/token/refresh/', {\n          refresh: refreshToken\n        }).then(response => {\n          localStorage.setItem('access_token', response.data.access);\n          localStorage.setItem('refresh_token', response.data.refresh);\n          axiosInstance.defaults.headers['Authorization'] = 'JWT ' + response.data.access;\n          originalRequest.headers['Authorization'] = 'JWT ' + response.data.access;\n          return axiosInstance(originalRequest);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        console.log('Refresh token is expired', tokenParts.exp, now);\n        window.location.href = '/login/';\n      }\n    } else {\n      console.log('Refresh token not available.');\n      window.location.href = '/login/';\n    }\n  } // specific error handling done elsewhere\n\n\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"sources":["/Users/arpansahu/projects/profile/altered_datum/src/axios.js"],"names":["axios","base_url","process","env","REACT_APP_API_BASE_URL","baseURL","axiosInstance","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","exp","post","refresh","then","setItem","access","defaults","catch","err","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst base_url = process.env.REACT_APP_API_BASE_URL;\nconst baseURL =  base_url + '/api/';\nconst axiosInstance = axios.create(\n\n\t{\n\tbaseURL: baseURL,\n\ttimeout: 5000,\n\theaders: {\n\t\tAuthorization: localStorage.getItem('access_token')\n\t\t\t? 'Bearer ' + localStorage.getItem('access_token')\n\t\t\t: null,\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t}, \n});\n\naxiosInstance.interceptors.response.use(\n\t(response) => {\n\t\treturn response;\n\t},\n\tasync function (error) {\n\t\tconst originalRequest = error.config;\n\n\t\tif (typeof error.response === 'undefined') {\n\t\t\talert(\n\t\t\t\t'A server/network error occurred. ' +\n\t\t\t\t\t'Looks like CORS might be the problem. ' +\n\t\t\t\t\t'Sorry about this - we will get it fixed shortly.'\n\t\t\t);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.status === 401 &&\n\t\t\toriginalRequest.url === baseURL + 'token/refresh/'\n\t\t) {\n\t\t\twindow.location.href = '/login/';\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.data.code === 'token_not_valid' &&\n\t\t\terror.response.status === 401 &&\n\t\t\terror.response.statusText === 'Unauthorized'\n\t\t) {\n\t\t\tconst refreshToken = localStorage.getItem('refresh_token');\n\n\t\t\tif (refreshToken) {\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n\n\t\t\t\t// exp date in token is expressed in seconds, while now() returns milliseconds:\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\n\t\t\t\t// console.log(tokenParts.exp);\n\n\t\t\t\tif (tokenParts.exp > now) {\n\t\t\t\t\treturn axiosInstance\n\t\t\t\t\t\t.post('/token/refresh/', { refresh: refreshToken })\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tlocalStorage.setItem('access_token', response.data.access);\n\t\t\t\t\t\t\tlocalStorage.setItem('refresh_token', response.data.refresh);\n\n\t\t\t\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\t\t\t\t\t\t\toriginalRequest.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\n\t\t\t\t\t\t\treturn axiosInstance(originalRequest);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Refresh token is expired', tokenParts.exp, now);\n\t\t\t\t\twindow.location.href = '/login/';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('Refresh token not available.');\n\t\t\t\twindow.location.href = '/login/';\n\t\t\t}\n\t\t}\n\n\t\t// specific error handling done elsewhere\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport default axiosInstance;\n"]},"metadata":{},"sourceType":"module"}