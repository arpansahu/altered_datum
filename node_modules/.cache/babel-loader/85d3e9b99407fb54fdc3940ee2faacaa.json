{"ast":null,"code":"var _jsxFileName = \"/Users/arpansahu/projects/profile/altered_datum/src/components/auth/passwordupdate.js\";\nimport Header from '../header';\nimport React, { useState, useEffect } from 'react'; // MaterialUI\n\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axiosInstance from '../../axios';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  success: {\n    backgroundColor: theme.palette.success.main\n  }\n}));\nconst PASSWORD_REGEX = \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\";\nexport default function UpdatePassword() {\n  const classes = useStyles();\n  const [formData, updateFormData] = useState({\n    password: '',\n    password_two: ''\n  });\n  const [userId, setUserId] = useState(null);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    variant: ''\n  });\n  useEffect(() => {\n    axiosInstance.get('user/account/').then(res => {\n      setUserId(res.data.id);\n    }).catch(err => {\n      setSnackbar({\n        open: true,\n        message: \"Failed to fetch user data\",\n        variant: \"error\"\n      });\n    });\n  }, []);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (formData.password !== formData.password_two) {\n      setSnackbar({\n        open: true,\n        message: \"Both passwords should be the same\",\n        variant: \"error\"\n      });\n      return;\n    }\n\n    axiosInstance.patch(`user/account/passwordchange/${userId}/`, {\n      password: formData.password,\n      password2: formData.password_two\n    }).then(() => {\n      setSnackbar({\n        open: true,\n        message: \"Your password has been updated successfully\",\n        variant: \"success\"\n      });\n    }).catch(error => {\n      let errorMsg = \"An error occurred. Please try again.\";\n\n      if (error.response) {\n        if (error.response.status === 403) {\n          errorMsg = \"User already registered\";\n        } else if (error.response.status === 400) {\n          errorMsg = \"Your input details are incorrect\";\n        }\n      }\n\n      setSnackbar({\n        open: true,\n        message: errorMsg,\n        variant: \"error\"\n      });\n    });\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbar({ ...snackbar,\n      open: false\n    });\n  };\n\n  const [hidePassword, setHidePassword] = useState(true);\n  const [hidePassword_two, setHidePassword_Two] = useState(true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }\n  }, \"Update Password\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    type: hidePassword ? \"password\" : \"input\",\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }\n      }, hidePassword ? /*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon, {\n        fontSize: \"default\",\n        onClick: () => setHidePassword(!hidePassword),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 12\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityTwoToneIcon, {\n        fontSize: \"default\",\n        onClick: () => setHidePassword(!hidePassword),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }\n      }))\n    },\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    margin: \"normal\",\n    name: \"password\",\n    label: \"Password\",\n    id: \"password\",\n    onChange: handleChange,\n    value: formData.password,\n    validators: ['required', `matchRegexp:${PASSWORD_REGEX}`],\n    errorMessages: ['This field is required', 'Password must be strong'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    type: hidePassword_two ? \"password\" : \"input\",\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 10\n        }\n      }, hidePassword_two ? /*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon, {\n        fontSize: \"default\",\n        onClick: () => setHidePassword_Two(!hidePassword_two),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 12\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityTwoToneIcon, {\n        fontSize: \"default\",\n        onClick: () => setHidePassword_Two(!hidePassword_two),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 12\n        }\n      }))\n    },\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    margin: \"normal\",\n    name: \"password_two\",\n    label: \"Confirm Password\",\n    id: \"password_two\",\n    onChange: handleChange,\n    value: formData.password_two,\n    validators: ['required', `matchRegexp:${PASSWORD_REGEX}`],\n    errorMessages: ['This field is required', 'Password must be strong'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, \"Update Password\")), /*#__PURE__*/React.createElement(Snackbar, {\n    open: snackbar.open,\n    autoHideDuration: 3000,\n    onClose: handleSnackbarClose,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes[snackbar.variant],\n    message: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, snackbar.variant === \"error\" ? /*#__PURE__*/React.createElement(ErrorIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(CheckCircleOutlineIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 10\n      }\n    }, snackbar.message)),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      onClick: handleSnackbarClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 10\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/arpansahu/projects/profile/altered_datum/src/components/auth/passwordupdate.js"],"names":["Header","React","useState","useEffect","Button","CssBaseline","makeStyles","Container","axiosInstance","ValidatorForm","TextValidator","InputAdornment","Snackbar","SnackbarContent","IconButton","ErrorIcon","CheckCircleOutlineIcon","CloseIcon","VisibilityOffTwoToneIcon","VisibilityTwoToneIcon","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","error","backgroundColor","palette","dark","success","main","PASSWORD_REGEX","UpdatePassword","classes","formData","updateFormData","password","password_two","userId","setUserId","snackbar","setSnackbar","open","message","variant","get","then","res","data","id","catch","err","handleChange","e","target","name","value","trim","handleSubmit","preventDefault","patch","password2","errorMsg","response","status","handleSnackbarClose","hidePassword","setHidePassword","hidePassword_two","setHidePassword_Two","endAdornment","vertical","horizontal","marginLeft"],"mappings":"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","sourcesContent":["import Header from '../header';\nimport React, { useState, useEffect } from 'react';\n// MaterialUI\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axiosInstance from '../../axios';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n\terror: {\n\t\tbackgroundColor: theme.palette.error.dark,\n\t},\n\tsuccess: {\n\t\tbackgroundColor: theme.palette.success.main,\n\t},\n}));\n\nconst PASSWORD_REGEX = \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\";\n\nexport default function UpdatePassword() {\n\tconst classes = useStyles();\n\tconst [formData, updateFormData] = useState({ password: '', password_two: '' });\n\tconst [userId, setUserId] = useState(null);\n\tconst [snackbar, setSnackbar] = useState({ open: false, message: '', variant: '' });\n\n\tuseEffect(() => {\n\t\taxiosInstance.get('user/account/')\n\t\t\t.then((res) => {\n\t\t\t\tsetUserId(res.data.id);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetSnackbar({ open: true, message: \"Failed to fetch user data\", variant: \"error\" });\n\t\t\t});\n\t}, []);\n\n\tconst handleChange = (e) => {\n\t\tupdateFormData({\n\t\t\t...formData,\n\t\t\t[e.target.name]: e.target.value.trim(),\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (formData.password !== formData.password_two) {\n\t\t\tsetSnackbar({ open: true, message: \"Both passwords should be the same\", variant: \"error\" });\n\t\t\treturn;\n\t\t}\n\n\t\taxiosInstance.patch(`user/account/passwordchange/${userId}/`, {\n\t\t\tpassword: formData.password,\n\t\t\tpassword2: formData.password_two\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tsetSnackbar({ open: true, message: \"Your password has been updated successfully\", variant: \"success\" });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tlet errorMsg = \"An error occurred. Please try again.\";\n\t\t\t\tif (error.response) {\n\t\t\t\t\tif (error.response.status === 403) {\n\t\t\t\t\t\terrorMsg = \"User already registered\";\n\t\t\t\t\t} else if (error.response.status === 400) {\n\t\t\t\t\t\terrorMsg = \"Your input details are incorrect\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetSnackbar({ open: true, message: errorMsg, variant: \"error\" });\n\t\t\t});\n\t};\n\n\tconst handleSnackbarClose = () => {\n\t\tsetSnackbar({ ...snackbar, open: false });\n\t};\n\n\tconst [hidePassword, setHidePassword] = useState(true);\n\tconst [hidePassword_two, setHidePassword_Two] = useState(true);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\tUpdate Password\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ValidatorForm className={classes.form} noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\ttype={hidePassword ? \"password\" : \"input\"}\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t\t{hidePassword ? (\n\t\t\t\t\t\t\t\t\t\t\t<VisibilityOffTwoToneIcon fontSize=\"default\" onClick={() => setHidePassword(!hidePassword)} />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<VisibilityTwoToneIcon fontSize=\"default\" onClick={() => setHidePassword(!hidePassword)} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\t\tvalidators={['required', `matchRegexp:${PASSWORD_REGEX}`]}\n\t\t\t\t\t\t\terrorMessages={['This field is required', 'Password must be strong']}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\ttype={hidePassword_two ? \"password\" : \"input\"}\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t\t{hidePassword_two ? (\n\t\t\t\t\t\t\t\t\t\t\t<VisibilityOffTwoToneIcon fontSize=\"default\" onClick={() => setHidePassword_Two(!hidePassword_two)} />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<VisibilityTwoToneIcon fontSize=\"default\" onClick={() => setHidePassword_Two(!hidePassword_two)} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tname=\"password_two\"\n\t\t\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\t\t\tid=\"password_two\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.password_two}\n\t\t\t\t\t\t\tvalidators={['required', `matchRegexp:${PASSWORD_REGEX}`]}\n\t\t\t\t\t\t\terrorMessages={['This field is required', 'Password must be strong']}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tUpdate Password\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ValidatorForm>\n\t\t\t\t\t<Snackbar\n\t\t\t\t\t\topen={snackbar.open}\n\t\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\t\tonClose={handleSnackbarClose}\n\t\t\t\t\t\tanchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SnackbarContent\n\t\t\t\t\t\t\tclassName={classes[snackbar.variant]}\n\t\t\t\t\t\t\tmessage={\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{snackbar.variant === \"error\" ? (\n\t\t\t\t\t\t\t\t\t\t<ErrorIcon fontSize=\"large\" />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlineIcon fontSize=\"large\" />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<span style={{ marginLeft: \"8px\" }}>{snackbar.message}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taction={[\n\t\t\t\t\t\t\t\t<IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackbarClose}>\n\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t</IconButton>,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Snackbar>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}"]},"metadata":{},"sourceType":"module"}