{"ast":null,"code":"var _jsxFileName = \"/Users/arpansahu/projects/profile/altered_datum/src/Admin.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Posts from './components/admin/posts';\nimport PostLoadingComponent from './components/posts/postLoading';\nimport axiosInstance from './axios';\nimport { useHistory } from 'react-router';\n\nfunction Admin() {\n  const history = useHistory();\n  const PostLoading = PostLoadingComponent(Posts);\n  const [appState, setAppState] = useState({\n    loading: true,\n    posts: null\n  });\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const accessToken = localStorage.getItem('access_token');\n        const res = await axiosInstance.get('', {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        setAppState({\n          loading: false,\n          posts: res.data\n        });\n      } catch (err) {\n        console.error(\"Error fetching posts:\", err);\n        history.push('/login');\n      }\n    };\n\n    fetchPosts();\n  }, [history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(PostLoading, {\n    isLoading: appState.loading,\n    posts: appState.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/arpansahu/projects/profile/altered_datum/src/Admin.js"],"names":["React","useEffect","useState","Posts","PostLoadingComponent","axiosInstance","useHistory","Admin","history","PostLoading","appState","setAppState","loading","posts","fetchPosts","accessToken","localStorage","getItem","res","get","headers","Authorization","data","err","console","error","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,SAASC,KAAT,GAAiB;AAChB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAMG,WAAW,GAAGL,oBAAoB,CAACD,KAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACxCU,IAAAA,OAAO,EAAE,IAD+B;AAExCC,IAAAA,KAAK,EAAE;AAFiC,GAAD,CAAxC;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,UAAU,GAAG,YAAY;AAC9B,UAAI;AACH,cAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB;AACA,cAAMC,GAAG,GAAG,MAAMb,aAAa,CAACc,GAAd,CAAkB,EAAlB,EAAsB;AACvCC,UAAAA,OAAO,EAAE;AACRC,YAAAA,aAAa,EAAG,UAASN,WAAY;AAD7B;AAD8B,SAAtB,CAAlB;AAKAJ,QAAAA,WAAW,CAAC;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,KAAK,EAAEK,GAAG,CAACI;AAA7B,SAAD,CAAX;AACA,OARD,CAQE,OAAOC,GAAP,EAAY;AACbC,QAAAA,OAAO,CAACC,KAAR,CAAc,uBAAd,EAAuCF,GAAvC;AACAf,QAAAA,OAAO,CAACkB,IAAR,CAAa,QAAb;AACA;AACD,KAbD;;AAeAZ,IAAAA,UAAU;AACV,GAjBQ,EAiBN,CAACN,OAAD,CAjBM,CAAT;AAmBA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEE,QAAQ,CAACE,OAAjC;AAA0C,IAAA,KAAK,EAAEF,QAAQ,CAACG,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAKA;;AAED,eAAeN,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Posts from './components/admin/posts';\nimport PostLoadingComponent from './components/posts/postLoading';\nimport axiosInstance from './axios';\nimport { useHistory } from 'react-router';\n\nfunction Admin() {\n\tconst history = useHistory();\n\tconst PostLoading = PostLoadingComponent(Posts);\n\tconst [appState, setAppState] = useState({\n\t\tloading: true,\n\t\tposts: null,\n\t});\n\n\tuseEffect(() => {\n\t\tconst fetchPosts = async () => {\n\t\t\ttry {\n\t\t\t\tconst accessToken = localStorage.getItem('access_token');\n\t\t\t\tconst res = await axiosInstance.get('', {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tsetAppState({ loading: false, posts: res.data });\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(\"Error fetching posts:\", err);\n\t\t\t\thistory.push('/login');\n\t\t\t}\n\t\t};\n\n\t\tfetchPosts();\n\t}, [history]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<PostLoading isLoading={appState.loading} posts={appState.posts} />\n\t\t</div>\n\t);\n}\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}