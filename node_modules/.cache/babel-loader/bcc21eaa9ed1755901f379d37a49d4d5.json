{"ast":null,"code":"import _defineProperty from\"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import axiosInstance from'../../axios';import{useHistory}from'react-router-dom';// MaterialUI\nimport Avatar from'@material-ui/core/Avatar';import Button from'@material-ui/core/Button';import CssBaseline from'@material-ui/core/CssBaseline';import TextField from'@material-ui/core/TextField';import FormControlLabel from'@material-ui/core/FormControlLabel';import Checkbox from'@material-ui/core/Checkbox';import Link from'@material-ui/core/Link';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';import Container from'@material-ui/core/Container';import HeaderForGuest from'../headerforguest';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import VisibilityOffTwoToneIcon from\"@material-ui/icons/VisibilityOffTwoTone\";import VisibilityTwoToneIcon from\"@material-ui/icons/VisibilityTwoTone\";import InputAdornment from'@material-ui/core/InputAdornment';import Snackbar from\"@material-ui/core/Snackbar\";import SnackbarContent from\"@material-ui/core/SnackbarContent\";import IconButton from\"@material-ui/core/IconButton\";import ErrorIcon from\"@material-ui/icons/Error\";import CloseIcon from\"@material-ui/icons/Close\";var useStyles=makeStyles(function(theme){return{paper:{marginTop:theme.spacing(8),display:'flex',flexDirection:'column',alignItems:'center'},avatar:{margin:theme.spacing(1),backgroundColor:theme.palette.secondary.main},form:{width:'100%',// Fix IE 11 issue.\nmarginTop:theme.spacing(3)},submit:{margin:theme.spacing(3,0,2)},passwordEye:{color:\"rgba(131,153,167,0.9)\",opacity:0.7},error:{backgroundColor:theme.palette.error.dark}};});var PASSWORD_REGEX=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\";export default function SignUp(){var history=useHistory();var classes=useStyles();var initialFormData={email:'',username:'',password:'',password_two:''};var _useState=useState(initialFormData),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],updateFormData=_useState2[1];var _useState3=useState({errorOpen:false,error:\"\"}),_useState4=_slicedToArray(_useState3,2),passwordsMatch=_useState4[0],updatePasswordsMatch=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),hidePassword=_useState6[0],setHidePassword=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),hidePasswordTwo=_useState8[0],setHidePasswordTwo=_useState8[1];var handleChange=function handleChange(e){updateFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var handleSubmit=function handleSubmit(e){e.preventDefault();if(formData.password!==formData.password_two){updatePasswordsMatch({errorOpen:true,error:\"Both passwords should be the same\"});return;}axiosInstance.post(\"user/create/\",{email:formData.email,username:formData.username,password:formData.password}).then(function(){history.push('/login');}).catch(function(error){var errorMsg=\"Your input details are incorrect\";if(error.response){if(error.response.status===403){errorMsg=\"User already registered\";}}updatePasswordsMatch({errorOpen:true,error:errorMsg});});};var togglePasswordVisibility=function togglePasswordVisibility(toggleStateFunc){toggleStateFunc(function(prevState){return!prevState;});};var errorClose=function errorClose(){updatePasswordsMatch({errorOpen:false,error:\"\"});};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(HeaderForGuest,null),/*#__PURE__*/React.createElement(Container,{component:\"main\",maxWidth:\"xs\"},/*#__PURE__*/React.createElement(CssBaseline,null),/*#__PURE__*/React.createElement(\"div\",{className:classes.paper},/*#__PURE__*/React.createElement(Avatar,{className:classes.avatar}),/*#__PURE__*/React.createElement(Typography,{component:\"h1\",variant:\"h5\"},\"Sign up\"),/*#__PURE__*/React.createElement(ValidatorForm,{className:classes.form,noValidate:true,onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(TextValidator,{variant:\"outlined\",required:true,fullWidth:true,id:\"email\",label:\"Email Address\",name:\"email\",autoComplete:\"email\",onChange:handleChange,value:formData.email,validators:['required','isEmail'],errorMessages:['This field is required','Email is not valid']})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(TextValidator,{variant:\"outlined\",required:true,fullWidth:true,id:\"username\",label:\"Username\",name:\"username\",value:formData.username,autoComplete:\"username\",onChange:handleChange,validators:['required'],errorMessages:['This field is required']})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(TextValidator,{type:hidePassword?\"password\":\"input\",InputProps:{endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},hidePassword?/*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon,{fontSize:\"default\",className:classes.passwordEye,onClick:function onClick(){return togglePasswordVisibility(setHidePassword);}}):/*#__PURE__*/React.createElement(VisibilityTwoToneIcon,{fontSize:\"default\",className:classes.passwordEye,onClick:function onClick(){return togglePasswordVisibility(setHidePassword);}}))},variant:\"outlined\",required:true,fullWidth:true,name:\"password\",label:\"Password\",id:\"password\",autoComplete:\"current-password\",onChange:handleChange,value:formData.password,validators:['required',\"matchRegexp:\".concat(PASSWORD_REGEX)],errorMessages:['This field is required','The password must be strong with 8-20 characters, including upper and lower case letters, a number, and a special character.']})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(TextValidator,{type:hidePasswordTwo?\"password\":\"input\",InputProps:{endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},hidePasswordTwo?/*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon,{fontSize:\"default\",className:classes.passwordEye,onClick:function onClick(){return togglePasswordVisibility(setHidePasswordTwo);}}):/*#__PURE__*/React.createElement(VisibilityTwoToneIcon,{fontSize:\"default\",className:classes.passwordEye,onClick:function onClick(){return togglePasswordVisibility(setHidePasswordTwo);}}))},variant:\"outlined\",required:true,fullWidth:true,name:\"password_two\",label:\"Confirm Password\",id:\"password_two\",autoComplete:\"current-password\",onChange:handleChange,value:formData.password_two,validators:['required',\"matchRegexp:\".concat(PASSWORD_REGEX)],errorMessages:['This field is required','The password must be strong with 8-20 characters, including upper and lower case letters, a number, and a special character.']})),passwordsMatch.error&&/*#__PURE__*/React.createElement(Snackbar,{variant:\"error\",key:passwordsMatch.error,anchorOrigin:{vertical:\"bottom\",horizontal:\"center\"},open:passwordsMatch.errorOpen,onClose:errorClose,autoHideDuration:3000},/*#__PURE__*/React.createElement(SnackbarContent,{className:classes.error,message:/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ErrorIcon,{fontSize:\"large\",color:\"error\"}),/*#__PURE__*/React.createElement(\"span\",{style:{marginLeft:\"8px\"}},passwordsMatch.error)),action:[/*#__PURE__*/React.createElement(IconButton,{key:\"close\",\"aria-label\":\"close\",onClick:errorClose},/*#__PURE__*/React.createElement(CloseIcon,{color:\"inherit\"}))]})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{value:\"allowExtraEmails\",color:\"primary\"}),label:\"I want to receive inspiration, marketing promotions and updates via email.\"}))),/*#__PURE__*/React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",className:classes.submit},\"Sign Up\"),/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"flex-end\"},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Link,{href:\"/login\",variant:\"body2\"},\"Already have an account? Sign in\")))))));}","map":{"version":3,"sources":["/app/src/components/auth/register.js"],"names":["React","useState","axiosInstance","useHistory","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Typography","makeStyles","Container","HeaderForGuest","ValidatorForm","TextValidator","VisibilityOffTwoToneIcon","VisibilityTwoToneIcon","InputAdornment","Snackbar","SnackbarContent","IconButton","ErrorIcon","CloseIcon","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","passwordEye","color","opacity","error","dark","PASSWORD_REGEX","SignUp","history","classes","initialFormData","email","username","password","password_two","formData","updateFormData","errorOpen","passwordsMatch","updatePasswordsMatch","hidePassword","setHidePassword","hidePasswordTwo","setHidePasswordTwo","handleChange","e","target","name","value","handleSubmit","preventDefault","post","then","push","catch","errorMsg","response","status","togglePasswordVisibility","toggleStateFunc","prevState","errorClose","endAdornment","vertical","horizontal","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axiosInstance from '../../axios';\nimport { useHistory } from 'react-router-dom';\n// MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport HeaderForGuest from '../headerforguest';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    passwordEye: {\n        color: \"rgba(131,153,167,0.9)\",\n        opacity: 0.7\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n}));\n\nconst PASSWORD_REGEX = \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\";\n\nexport default function SignUp() {\n    const history = useHistory();\n    const classes = useStyles();\n\n    const initialFormData = {\n        email: '',\n        username: '',\n        password: '',\n        password_two: '',\n    };\n\n    const [formData, updateFormData] = useState(initialFormData);\n    const [passwordsMatch, updatePasswordsMatch] = useState({ errorOpen: false, error: \"\" });\n    const [hidePassword, setHidePassword] = useState(true);\n    const [hidePasswordTwo, setHidePasswordTwo] = useState(true);\n\n    const handleChange = (e) => {\n        updateFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (formData.password !== formData.password_two) {\n            updatePasswordsMatch({ errorOpen: true, error: \"Both passwords should be the same\" });\n            return;\n        }\n\n        axiosInstance.post(`user/create/`, {\n            email: formData.email,\n            username: formData.username,\n            password: formData.password,\n        })\n            .then(() => {\n                history.push('/login');\n            })\n            .catch((error) => {\n                let errorMsg = \"Your input details are incorrect\";\n                if (error.response) {\n                    if (error.response.status === 403) {\n                        errorMsg = \"User already registered\";\n                    }\n                }\n                updatePasswordsMatch({ errorOpen: true, error: errorMsg });\n            });\n    };\n\n    const togglePasswordVisibility = (toggleStateFunc) => {\n        toggleStateFunc(prevState => !prevState);\n    };\n\n    const errorClose = () => {\n        updatePasswordsMatch({ errorOpen: false, error: \"\" });\n    };\n\n    return (\n        <div className=\"App\">\n            <HeaderForGuest />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}></Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <ValidatorForm className={classes.form} noValidate onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextValidator\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    onChange={handleChange}\n                                    value={formData.email}\n                                    validators={['required', 'isEmail']}\n                                    errorMessages={['This field is required', 'Email is not valid']}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextValidator\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    value={formData.username}\n                                    autoComplete=\"username\"\n                                    onChange={handleChange}\n                                    validators={['required']}\n                                    errorMessages={['This field is required']}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextValidator\n                                    type={hidePassword ? \"password\" : \"input\"}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                {hidePassword ? (\n                                                    <VisibilityOffTwoToneIcon\n                                                        fontSize=\"default\"\n                                                        className={classes.passwordEye}\n                                                        onClick={() => togglePasswordVisibility(setHidePassword)}\n                                                    />\n                                                ) : (\n                                                    <VisibilityTwoToneIcon\n                                                        fontSize=\"default\"\n                                                        className={classes.passwordEye}\n                                                        onClick={() => togglePasswordVisibility(setHidePassword)}\n                                                    />\n                                                )}\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={handleChange}\n                                    value={formData.password}\n                                    validators={['required', `matchRegexp:${PASSWORD_REGEX}`]}\n                                    errorMessages={[\n                                        'This field is required',\n                                        'The password must be strong with 8-20 characters, including upper and lower case letters, a number, and a special character.'\n                                    ]}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextValidator\n                                    type={hidePasswordTwo ? \"password\" : \"input\"}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                {hidePasswordTwo ? (\n                                                    <VisibilityOffTwoToneIcon\n                                                        fontSize=\"default\"\n                                                        className={classes.passwordEye}\n                                                        onClick={() => togglePasswordVisibility(setHidePasswordTwo)}\n                                                    />\n                                                ) : (\n                                                    <VisibilityTwoToneIcon\n                                                        fontSize=\"default\"\n                                                        className={classes.passwordEye}\n                                                        onClick={() => togglePasswordVisibility(setHidePasswordTwo)}\n                                                    />\n                                                )}\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password_two\"\n                                    label=\"Confirm Password\"\n                                    id=\"password_two\"\n                                    autoComplete=\"current-password\"\n                                    onChange={handleChange}\n                                    value={formData.password_two}\n                                    validators={['required', `matchRegexp:${PASSWORD_REGEX}`]}\n                                    errorMessages={[\n                                        'This field is required',\n                                        'The password must be strong with 8-20 characters, including upper and lower case letters, a number, and a special character.'\n                                    ]}\n                                />\n                            </Grid>\n                            {passwordsMatch.error && (\n                                <Snackbar\n                                    variant=\"error\"\n                                    key={passwordsMatch.error}\n                                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n                                    open={passwordsMatch.errorOpen}\n                                    onClose={errorClose}\n                                    autoHideDuration={3000}\n                                >\n                                    <SnackbarContent\n                                        className={classes.error}\n                                        message={\n                                            <div>\n                                                <ErrorIcon fontSize=\"large\" color=\"error\" />\n                                                <span style={{ marginLeft: \"8px\" }}>{passwordsMatch.error}</span>\n                                            </div>\n                                        }\n                                        action={[\n                                            <IconButton key=\"close\" aria-label=\"close\" onClick={errorClose}>\n                                                <CloseIcon color=\"inherit\" />\n                                            </IconButton>,\n                                        ]}\n                                    />\n                                </Snackbar>\n                            )}\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/login\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </ValidatorForm>\n                </div>\n            </Container>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}