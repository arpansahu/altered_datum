{"ast":null,"code":"var _jsxFileName = \"/Users/arpansahu/projects/profile/altered_datum/src/components/auth/reset.js\";\nimport React, { useState, setState } from 'react';\nimport axiosInstance from '../../axios';\nimport { useHistory, useParams } from 'react-router-dom'; //MaterialUI\n\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport HeaderForGuest from '../headerforguest';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  passwordEye: {\n    color: \"rgba(131,153,167,0.9)\",\n    opacity: 0.7\n  }\n}));\nexport default function SignUp() {\n  const history = useHistory();\n  const {\n    uidb64,\n    token\n  } = useParams();\n  const initialFormData = Object.freeze({\n    password: '',\n    password_two: ''\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      // Trimming any whitespace\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const [passwordsMatch, updatePasswordsMatch] = useState({\n    errorOpen: false,\n    error: \"\"\n  });\n\n  const errorClose = e => {\n    updatePasswordsMatch({\n      errorOpen: false,\n      error: \"\"\n    });\n  };\n\n  const [message, updateMessage] = useState({\n    messageOpen: false,\n    data: \"\"\n  });\n\n  const messageClose = e => {\n    updateMessage({\n      messageOpen: false,\n      data: \"\"\n    });\n  };\n\n  const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\");\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(formData);\n\n    if (formData.password == formData.password_two && strongRegex.test(formData.password) && strongRegex.test(formData.password_two)) {\n      updatePasswordsMatch({\n        errorOpen: false,\n        error: \"\"\n      });\n      axiosInstance.post(`user/account/resetpassword/`, {\n        uidb64: uidb64,\n        token: token,\n        password1: formData.password,\n        password2: formData.password_two\n      }).then(res => {\n        updateMessage({\n          messageOpen: true,\n          data: \"Passsword reset Successfully\"\n        });\n      }).catch(function (error) {\n        if (error.response) {\n          // console.log(error.response.data);\n          // console.log(error.response.status);\n          // console.log(error.response.headers);\n          if (error.response.status == 400) {\n            updatePasswordsMatch({\n              errorOpen: true,\n              error: \"Resent link expired or already used\"\n            });\n          }\n\n          if (error.response.status == 206) {\n            updatePasswordsMatch({\n              errorOpen: true,\n              error: \"Password do not match\"\n            });\n          }\n        }\n      });\n    } else if (formData.password != formData.password_two) {\n      updatePasswordsMatch({\n        errorOpen: true,\n        error: \"Both passwords should be same\"\n      });\n    }\n  };\n\n  const [hidePassword, setHidePassword] = useState(true);\n\n  const showPassword = () => {\n    // console.log(\"show passsword\", + hidePassword)\n    setHidePassword(!hidePassword); // console.log(\"After show passsword\", + hidePassword)\n  };\n\n  const [hidePassword_two, setHidePassword_Two] = useState(true);\n\n  const showPassword_two = () => {\n    // console.log(\"show passsword\", + hidePassword_two)\n    setHidePassword_Two(!hidePassword_two); // console.log(\"After show passsword\", + hidePassword_two)\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(HeaderForGuest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    style: {\n      whiteSpace: \"pre-line\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    type: hidePassword ? \"password\" : \"input\",\n    InputProps: hidePassword ? {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: showPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }))\n    } : {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(VisibilityTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: showPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }))\n    },\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: handleChange,\n    value: formData.password,\n    validators: ['required', 'matchRegexp:^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})'],\n    errorMessages: ['this field is required', `The password must contain at least 1 lowercase alphabetical character\n\t\t\t\t\t\t\t\t\tThe password must contain at least 1 uppercase alphabetical character \n\t\t\t\t\t\t\t\t\tThe password must contain at least 1 numeric character\n\t\t\t\t\t\t\t\t\tThe string must contain at least one special character\n\t\t\t\t\t\t\t\t\tpassword length  should be 8-20`],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    type: hidePassword_two ? \"password\" : \"input\",\n    InputProps: hidePassword_two ? {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: showPassword_two,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }))\n    } : {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(VisibilityTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: showPassword_two,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      }))\n    },\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    marginTop: \"10\",\n    name: \"password_two\",\n    label: \"Confirm Password\",\n    id: \"password_two\",\n    autoComplete: \"current-password\",\n    onChange: handleChange,\n    value: formData.password_two,\n    validators: ['required', 'matchRegexp:^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})'],\n    errorMessages: ['this field is required', `The password must contain at least 1 lowercase alphabetical character\n\t\t\t\t\t\t\t\t\tThe password must contain at least 1 uppercase alphabetical character \n\t\t\t\t\t\t\t\t\tThe password must contain at least 1 numeric character\n\t\t\t\t\t\t\t\t\tThe string must contain at least one special character\n\t\t\t\t\t\t\t\t\tpassword length  should be 8-20`],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  })), passwordsMatch.error ? /*#__PURE__*/React.createElement(Snackbar, {\n    variant: \"error\",\n    key: passwordsMatch.error,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: passwordsMatch.errorOpen,\n    onClose: errorClose,\n    autoHideDuration: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes.error,\n    message: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(ErrorIcon, {\n      fontSize: \"large\",\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 10\n      }\n    }, \" \", passwordsMatch.error, \" \")),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      onClick: errorClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 10\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 8\n    }\n  })) : null, message.data ? /*#__PURE__*/React.createElement(Snackbar, {\n    variant: \"success\",\n    severity: \"success\",\n    key: message.data,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: message.messageOpen,\n    onClose: messageClose,\n    autoHideDuration: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes.success,\n    message: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircleOutlineIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }, \" \", message.data, \" \")),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      onClick: messageClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  })) : null), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    name: \"submit\",\n    className: classes.submit,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 6\n    }\n  }, \"Reset Password\")))));\n}","map":{"version":3,"sources":["/Users/arpansahu/projects/profile/altered_datum/src/components/auth/reset.js"],"names":["React","useState","setState","axiosInstance","useHistory","useParams","Button","CssBaseline","FormControlLabel","Checkbox","Link","Grid","Typography","makeStyles","Container","HeaderForGuest","ValidatorForm","TextValidator","VisibilityOffTwoToneIcon","VisibilityTwoToneIcon","InputAdornment","Snackbar","SnackbarContent","IconButton","ErrorIcon","CloseIcon","CheckCircleOutlineIcon","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","passwordEye","color","opacity","SignUp","history","uidb64","token","initialFormData","Object","freeze","password","password_two","formData","updateFormData","handleChange","e","target","name","value","passwordsMatch","updatePasswordsMatch","errorOpen","error","errorClose","message","updateMessage","messageOpen","data","messageClose","strongRegex","RegExp","handleSubmit","preventDefault","test","post","password1","password2","then","res","catch","response","status","hidePassword","setHidePassword","showPassword","hidePassword_two","setHidePassword_Two","showPassword_two","classes","whiteSpace","endAdornment","vertical","horizontal","marginRight","success"],"mappings":"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","sourcesContent":["import React, { useState, setState } from 'react';\nimport axiosInstance from '../../axios';\nimport { useHistory, useParams } from 'react-router-dom';\n//MaterialUI\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport HeaderForGuest from '../headerforguest';\nimport { ValidatorForm,TextValidator } from 'react-material-ui-form-validator';\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(3),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n\tpasswordEye: {\n\t\tcolor: \"rgba(131,153,167,0.9)\",\n\t\topacity: 0.7\n\t},\n\n}));\n\nexport default function SignUp() {\n\tconst history = useHistory();\n\tconst {uidb64,token} = useParams();\n\n\tconst initialFormData = Object.freeze({\n\t\tpassword: '',\n\t\tpassword_two: '',\n\t});\n\n\tconst [formData, updateFormData] = useState(initialFormData);\n\n\tconst handleChange = (e) => {\n\t\tupdateFormData({\n\t\t\t...formData,\n\t\t\t// Trimming any whitespace\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t};\n\tconst [passwordsMatch, updatePasswordsMatch] = useState({errorOpen: false,error: \"\"});\n\n\tconst errorClose = e => {\n\t\tupdatePasswordsMatch({errorOpen: false,error: \"\"});\n\t};\n\tconst [message, updateMessage] = useState({messageOpen: false, data :\"\"})\n\n\n\tconst messageClose = e => {\n\t\tupdateMessage({messageOpen: false, data:\"\"});\n\t}\n\tconst strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\");\n\t\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// console.log(formData);\n\n\t\tif(formData.password == formData.password_two && strongRegex.test(formData.password) && strongRegex.test(formData.password_two))\n\t\t{\n\t\t\tupdatePasswordsMatch({errorOpen: false,error: \"\"});\n\t\t\taxiosInstance\n\t\t\t.post(`user/account/resetpassword/`, {\n\t\t\t\tuidb64: uidb64,\n\t\t\t\ttoken:token,\n\t\t\t\tpassword1: formData.password,\n\t\t\t\tpassword2: formData.password_two\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tupdateMessage({messageOpen:true, data:\"Passsword reset Successfully\"})\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tif (error.response) {\n\t\t\t\t\t// console.log(error.response.data);\n\t\t\t\t\t// console.log(error.response.status);\n\t\t\t\t\t// console.log(error.response.headers);\n\t\t\t\t\tif(error.response.status == 400){\n\t\t\t\t\tupdatePasswordsMatch({errorOpen: true,error: \"Resent link expired or already used\"});\n\t\t\t\t\t}\n\t\t\t\t\tif(error.response.status == 206){\n\t\t\t\t\t\tupdatePasswordsMatch({errorOpen: true,error: \"Password do not match\"});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\telse if(formData.password != formData.password_two){\n\t\t\tupdatePasswordsMatch({errorOpen: true,error: \"Both passwords should be same\"});\n\t\t}\n\t};\n\n\tconst [hidePassword, setHidePassword] = useState(true);\n\tconst showPassword = () => {\n\t\t// console.log(\"show passsword\", + hidePassword)\n\t\tsetHidePassword(!hidePassword );\n\t\t// console.log(\"After show passsword\", + hidePassword)\n\t};\n\n\tconst [hidePassword_two, setHidePassword_Two] = useState(true);\n\tconst showPassword_two = () => {\n\t\t// console.log(\"show passsword\", + hidePassword_two)\n\t\tsetHidePassword_Two(!hidePassword_two );\n\t\t// console.log(\"After show passsword\", + hidePassword_two)\n\t};\n\n\t\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<HeaderForGuest />\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className={classes.paper} style={{whiteSpace:\"pre-line\"}}>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tReset Password\n\t\t\t\t</Typography>\n\t\t\t\t<ValidatorForm className={classes.form} noValidate>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{/* <TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\ttype={hidePassword ? \"password\" : \"input\"}\n\t\t\t\t\t\t\t\tInputProps={hidePassword ? { \n\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t\t<VisibilityOffTwoToneIcon\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"default\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.passwordEye}\n\t\t\t\t\t\t\t\t\t\t\tonClick={showPassword}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t  \t\t} : {\n\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t\t<VisibilityTwoToneIcon\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"default\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.passwordEye}\n\t\t\t\t\t\t\t\t\t\t\tonClick={showPassword}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\t\t\tvalidators={['required' , 'matchRegexp:^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})']\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\terrorMessages={[\n\t\t\t\t\t\t\t\t\t'this field is required',\n\t\t\t\t\t\t\t\t\t`The password must contain at least 1 lowercase alphabetical character\n\t\t\t\t\t\t\t\t\tThe password must contain at least 1 uppercase alphabetical character \n\t\t\t\t\t\t\t\t\tThe password must contain at least 1 numeric character\n\t\t\t\t\t\t\t\t\tThe string must contain at least one special character\n\t\t\t\t\t\t\t\t\tpassword length  should be 8-20` ,\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\ttype={hidePassword_two ? \"password\" : \"input\"}\n\t\t\t\t\t\t\t\tInputProps={hidePassword_two ? { \n\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t\t<VisibilityOffTwoToneIcon\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"default\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.passwordEye}\n\t\t\t\t\t\t\t\t\t\t\tonClick={showPassword_two}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t  \t\t} : {\n\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t\t<VisibilityTwoToneIcon\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"default\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.passwordEye}\n\t\t\t\t\t\t\t\t\t\t\tonClick={showPassword_two}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tmarginTop=\"10\"\n\t\t\t\t\t\t\t\tname=\"password_two\"\n\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\t\t\t\tid=\"password_two\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.password_two}\n\t\t\t\t\t\t\t\tvalidators={['required' , 'matchRegexp:^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})']\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\terrorMessages={[\n\t\t\t\t\t\t\t\t\t'this field is required',\n\t\t\t\t\t\t\t\t\t`The password must contain at least 1 lowercase alphabetical character\n\t\t\t\t\t\t\t\t\tThe password must contain at least 1 uppercase alphabetical character \n\t\t\t\t\t\t\t\t\tThe password must contain at least 1 numeric character\n\t\t\t\t\t\t\t\t\tThe string must contain at least one special character\n\t\t\t\t\t\t\t\t\tpassword length  should be 8-20` ,\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{passwordsMatch.error ? (\n\t\t\t\t\t\t\t<Snackbar\n\t\t\t\t\t\t\tvariant=\"error\"\n\t\t\t\t\t\t\tkey={passwordsMatch.error}\n\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\t\thorizontal: \"center\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\topen={passwordsMatch.errorOpen}\n\t\t\t\t\t\t\tonClose={errorClose}\n\t\t\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SnackbarContent\n\t\t\t\t\t\t\t\tclassName={classes.error}\n\t\t\t\t\t\t\t\tmessage={\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span style={{ marginRight: \"8px\" }}>\n\t\t\t\t\t\t\t\t\t<ErrorIcon fontSize=\"large\" color=\"error\" />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span> {passwordsMatch.error} </span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taction={[\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tkey=\"close\"\n\t\t\t\t\t\t\t\t\taria-label=\"close\"\n\t\t\t\t\t\t\t\t\tonClick={errorClose}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CloseIcon color=\"error\" />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Snackbar>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t{message.data ? (\n\t\t\t\t\t\t<Snackbar\n\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\tseverity=\"success\"\n\t\t\t\t\t\tkey={message.data}\n\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\thorizontal: \"center\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t\topen={message.messageOpen}\n\t\t\t\t\t\tonClose={messageClose}\n\t\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<SnackbarContent\n\t\t\t\t\t\t\tclassName={classes.success}\n\t\t\t\t\t\t\tmessage={\n\t\t\t\t\t\t\t<div style={{color:\"green\"}}>\n\t\t\t\t\t\t\t\t<span style={{ marginRight: \"8px\" }}>\n\t\t\t\t\t\t\t\t<CheckCircleOutlineIcon fontSize=\"large\"   />\n\t\t\t\t\t\t\t\t</span >\n\t\t\t\t\t\t\t\t<span> {message.data} </span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taction={[\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tkey=\"close\"\n\t\t\t\t\t\t\t\taria-label=\"close\"\n\t\t\t\t\t\t\t\tonClick={messageClose}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CloseIcon style={{color:\"green\"}} />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Snackbar>\n\t\t\t\t\t) : null}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tname=\"submit\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset Password\n\t\t\t\t\t</Button>\n\t\t\t\t\t\n\t\t\t\t</ValidatorForm>\n\t\t\t</div>\n\t\t</Container>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}