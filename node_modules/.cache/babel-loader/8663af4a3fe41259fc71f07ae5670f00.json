{"ast":null,"code":"var _jsxFileName = \"/Users/arpansahu/projects/profile/altered_datum/src/components/auth/passwordupdate.js\";\nimport Header from '../header';\nimport React, { useState, useEffect } from 'react'; //MaterialUI\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox'; // import Link from '@material-ui/core/Link';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axiosInstance from '../../axios';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function FormPropsTextFields() {\n  const classes = useStyles();\n  const [id, updateId] = useState(null);\n  let initialFormData = Object.freeze({\n    password: '',\n    password_two: ''\n  });\n  const [user_obj, setUser_Obj] = useState({});\n  useEffect(() => {\n    axiosInstance.get('user/account/').then(res => {\n      const account = res.data; // console.log(account)\n\n      setUser_Obj({\n        is_superuser: account.is_staff,\n        username: account.username,\n        email: account.email\n      });\n      updateFormData({\n        password: '',\n        password_two: ''\n      });\n      updateId(account.id);\n    }).catch(err => {\n      console.log(\"Inside Error\", err);\n    });\n  }, []);\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange = async e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const [passwordsMatch, updatePasswordsMatch] = useState({\n    errorOpen: false,\n    error: \"\"\n  });\n\n  const errorClose = e => {\n    updatePasswordsMatch({\n      errorOpen: false,\n      error: \"\"\n    });\n  };\n\n  const [message, updateMessage] = useState({\n    messageOpen: false,\n    data: \"\"\n  });\n\n  const messageClose = e => {\n    updateMessage({\n      messageOpen: false,\n      data: \"\"\n    });\n  };\n\n  const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n\n    if (formData.password && !strongRegex.test(formData.password) || formData.password_two && !strongRegex.test(formData.password_two)) {\n      // console.log(\"Inside first if\")\n      updatePasswordsMatch({\n        errorOpen: true,\n        error: \"PAssword Should be strong enough and username cant be empty\"\n      });\n    } else if (formData.password == formData.password_two) {\n      updatePasswordsMatch({\n        errorOpen: false,\n        error: \"\"\n      });\n      axiosInstance.patch(`user/account/passwordchange/` + id + `/`, {\n        password: formData.password,\n        password2: formData.password_two\n      }).then(res => {\n        console.log(res);\n        updateMessage({\n          messageOpen: true,\n          data: \"Your password updated Successfully\"\n        }); // console.log(res.data);\n        // console.log(res.statusText)\n      }).catch(function (error) {\n        if (error.response) {\n          if (error.response.status == 403) {\n            updatePasswordsMatch({\n              errorOpen: true,\n              error: \"User already Registered\"\n            }); // document.getElementById(\"invalid user\").innerHTML = 'No active account found with the given credentials';\n          }\n\n          if (error.response.status == 400) {\n            updatePasswordsMatch({\n              errorOpen: true,\n              error: \"Your Input Details are incorect\"\n            });\n          }\n        }\n      });\n    } else if (formData.password != formData.password_two) {\n      updatePasswordsMatch({\n        errorOpen: true,\n        error: \"Both passwords should be same\"\n      });\n    }\n  };\n\n  const [hidePassword, setHidePassword] = useState(true);\n\n  const showPassword = () => {\n    // console.log(\"show passsword\", + hidePassword)\n    setHidePassword(!hidePassword); // console.log(\"After show passsword\", + hidePassword)\n  };\n\n  const [hidePassword_two, setHidePassword_Two] = useState(true);\n\n  const showPassword_two = () => {\n    // console.log(\"show passsword\", + hidePassword_two)\n    setHidePassword_Two(!hidePassword_two); // console.log(\"After show passsword\", + hidePassword_two)\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    style: {\n      whiteSpace: \"pre-line\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, \"Account Details\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    type: hidePassword ? \"password\" : \"input\",\n    InputProps: hidePassword ? {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: showPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }))\n    } : {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(VisibilityTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: showPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }))\n    },\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    margin: \"normal\",\n    name: \"password\",\n    label: \"Password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: handleChange,\n    value: formData.password,\n    validators: ['required', 'matchRegexp:^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})'],\n    errorMessages: ['this field is required', `The password must contain at least 1 lowercase alphabetical character\n\t\t\t\t\t\t\tThe password must contain at least 1 uppercase alphabetical character \n\t\t\t\t\t\t\tThe password must contain at least 1 numeric character\n\t\t\t\t\t\t\tThe string must contain at least one special character\n\t\t\t\t\t\t\tpassword length  should be 8-20`],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    type: hidePassword_two ? \"password\" : \"input\",\n    InputProps: hidePassword_two ? {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(VisibilityOffTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: showPassword_two,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }\n      }))\n    } : {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(VisibilityTwoToneIcon, {\n        fontSize: \"default\",\n        className: classes.passwordEye,\n        onClick: showPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }\n      }))\n    },\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    margin: \"normal\",\n    marginTop: \"10\",\n    name: \"password_two\",\n    label: \"Confirm Password\",\n    id: \"password_two\",\n    autoComplete: \"current-password\",\n    onChange: handleChange,\n    value: formData.password_two,\n    validators: ['required', 'matchRegexp:^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})'],\n    errorMessages: ['this field is required', `The password must contain at least 1 lowercase alphabetical character\n\t\t\t\t\t\t\tThe password must contain at least 1 uppercase alphabetical character \n\t\t\t\t\t\t\tThe password must contain at least 1 numeric character\n\t\t\t\t\t\t\tThe string must contain at least one special character\n\t\t\t\t\t\t\tpassword length  should be 8-20`],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 6\n    }\n  }), passwordsMatch.error ? /*#__PURE__*/React.createElement(Snackbar, {\n    variant: \"error\",\n    key: passwordsMatch.error,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: passwordsMatch.errorOpen,\n    onClose: errorClose,\n    autoHideDuration: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes.error,\n    message: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ErrorIcon, {\n      fontSize: \"large\",\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, \" \", passwordsMatch.error, \" \")),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      onClick: errorClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  })) : null, message.data ? /*#__PURE__*/React.createElement(Snackbar, {\n    variant: \"success\",\n    severity: \"success\",\n    key: message.data,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: message.messageOpen,\n    onClose: messageClose,\n    autoHideDuration: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes.success,\n    message: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircleOutlineIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }\n    }, \" \", message.data, \" \")),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      onClick: messageClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  })) : null, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 6\n    }\n  }, \"Update Account details\")))));\n}","map":{"version":3,"sources":["/Users/arpansahu/projects/profile/altered_datum/src/components/auth/passwordupdate.js"],"names":["Header","React","useState","useEffect","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Grid","Typography","makeStyles","Container","axiosInstance","ValidatorForm","TextValidator","VisibilityOffTwoToneIcon","VisibilityTwoToneIcon","InputAdornment","Snackbar","SnackbarContent","IconButton","ErrorIcon","CheckCircleOutlineIcon","CloseIcon","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","FormPropsTextFields","classes","id","updateId","initialFormData","Object","freeze","password","password_two","user_obj","setUser_Obj","get","then","res","account","data","is_superuser","is_staff","username","email","updateFormData","catch","err","console","log","formData","handleChange","e","target","name","value","trim","passwordsMatch","updatePasswordsMatch","errorOpen","error","errorClose","message","updateMessage","messageOpen","messageClose","strongRegex","RegExp","handleSubmit","preventDefault","test","patch","password2","response","status","hidePassword","setHidePassword","showPassword","hidePassword_two","setHidePassword_Two","showPassword_two","whiteSpace","endAdornment","passwordEye","vertical","horizontal","marginRight","success","color"],"mappings":"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","sourcesContent":["\n\nimport Header from '../header';\n\nimport React, { useState, useEffect } from 'react';\n\n//MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axiosInstance from '../../axios';\nimport { ValidatorForm,TextValidator } from 'react-material-ui-form-validator';\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function FormPropsTextFields() {\n    const classes = useStyles();\n    const [id, updateId] = useState(null)\n\n    let initialFormData = Object.freeze({\n\t\tpassword: '',\n\t\tpassword_two: '',\n\t});\n\t\n\tconst[user_obj, setUser_Obj] = useState({})\n\n\tuseEffect(() =>\n\t\t{\n\t\t\taxiosInstance.get('user/account/')\n\t\t\t.then((res) => {\n\t\t\t\tconst account = res.data;\n\t\t\t\t// console.log(account)\n\t\t\t\tsetUser_Obj(\n\t\t\t\t\t{\t\n\t\t\t\t\t\tis_superuser: account.is_staff,\n\t\t\t\t\t\tusername: account.username,\n\t\t\t\t\t\temail: account.email,\t\n\t\t\t\t})\n\t\t\t\tupdateFormData({\n\t\t\t\t\tpassword:'',\n\t\t\t\t\tpassword_two:'',\n\t\t\t\t})\n                updateId(account.id)\n\t\t\t\t\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(\"Inside Error\", err);\n\t\t\t});\t\n\t\t}\n\t\t, []\n\t)\n\tconst [formData, updateFormData] = useState(initialFormData);\n\n    const handleChange = async (e) => {\n        updateFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n\t\n\tconst [passwordsMatch, updatePasswordsMatch] = useState({errorOpen: false,error: \"\"});\n\n\tconst errorClose = e => {\n\t\tupdatePasswordsMatch({errorOpen: false,error: \"\"});\n\t};\t\n\n\tconst [message, updateMessage] = useState({messageOpen: false, data :\"\"})\n\n\tconst messageClose = e => {\n\t\tupdateMessage({messageOpen: false, data:\"\"});\n\t}\n\n\tconst strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})\");\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(formData);\n\t\tif(\n\t\t\t(formData.password && !strongRegex.test(formData.password)) || (formData.password_two && !strongRegex.test(formData.password_two) )\n\t\t\t){\n\t\t\t\t// console.log(\"Inside first if\")\n\t\t\tupdatePasswordsMatch({errorOpen: true,error: \"PAssword Should be strong enough and username cant be empty\"});\n\t\t}\n\t\telse if(formData.password == formData.password_two)\n\t\t{\n\t\t\tupdatePasswordsMatch({errorOpen: false,error: \"\"});\n\t\t\taxiosInstance\n\t\t\t.patch(`user/account/passwordchange/`+ id + `/`, {\n\t\t\t\tpassword: formData.password,\n\t\t\t\tpassword2: formData.password_two\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tupdateMessage({messageOpen: true,data: \"Your password updated Successfully\"});\n\t\t\t\t// console.log(res.data);\n\t\t\t\t// console.log(res.statusText)\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tif (error.response) {\n\t\t\t\t\n\t\t\t\t\tif (error.response.status == 403){\n\t\t\t\t\tupdatePasswordsMatch({errorOpen: true,error: \"User already Registered\"});\n\t\t\t\t\t// document.getElementById(\"invalid user\").innerHTML = 'No active account found with the given credentials';\n\t\t\t\t\t}\n\t\t\t\t\tif(error.response.status == 400){\n\t\t\t\t\tupdatePasswordsMatch({errorOpen: true,error: \"Your Input Details are incorect\"});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\telse if(formData.password != formData.password_two){\n\t\t\tupdatePasswordsMatch({errorOpen: true,error: \"Both passwords should be same\"});\n\t\t}\n\t};\n\n\n\n\tconst [hidePassword, setHidePassword] = useState(true);\n\tconst showPassword = () => {\n\t\t// console.log(\"show passsword\", + hidePassword)\n\t\tsetHidePassword(!hidePassword );\n\t\t// console.log(\"After show passsword\", + hidePassword)\n\t};\n\n\tconst [hidePassword_two, setHidePassword_Two] = useState(true);\n\tconst showPassword_two = () => {\n\t\t// console.log(\"show passsword\", + hidePassword_two)\n\t\tsetHidePassword_Two(!hidePassword_two );\n\t\t// console.log(\"After show passsword\", + hidePassword_two)\n\t};\n  return (\n\n        <div className=\"App\">\n\t\t\t<Header />\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className={classes.paper}  style={{whiteSpace:\"pre-line\"}}>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tAccount Details\n\t\t\t\t</Typography>\n\t\t\t\t\n\t\t\t\t<ValidatorForm className={classes.form} noValidate>\n\t\t\t\t\t\n\t\t\t\t\t<TextValidator\n\t\t\t\t\t\ttype={hidePassword ? \"password\" : \"input\"}\n\t\t\t\t\t\tInputProps={hidePassword ? { \n\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t<VisibilityOffTwoToneIcon\n\t\t\t\t\t\t\t\t\tfontSize=\"default\"\n\t\t\t\t\t\t\t\t\tclassName={classes.passwordEye}\n\t\t\t\t\t\t\t\t\tonClick={showPassword}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t} : {\n\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t<VisibilityTwoToneIcon\n\t\t\t\t\t\t\t\t\tfontSize=\"default\"\n\t\t\t\t\t\t\t\t\tclassName={classes.passwordEye}\n\t\t\t\t\t\t\t\t\tonClick={showPassword}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\tvalidators={['required' , 'matchRegexp:^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})']\n\t\t\t\t\t\t}\n\t\t\t\t\t\terrorMessages={[\n\t\t\t\t\t\t\t'this field is required',\n\t\t\t\t\t\t\t`The password must contain at least 1 lowercase alphabetical character\n\t\t\t\t\t\t\tThe password must contain at least 1 uppercase alphabetical character \n\t\t\t\t\t\t\tThe password must contain at least 1 numeric character\n\t\t\t\t\t\t\tThe string must contain at least one special character\n\t\t\t\t\t\t\tpassword length  should be 8-20` ,\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\n\t\t\t\t\t/>\n\n\t\t\t\t\t\n\t\t\t\t\t<TextValidator\n\t\t\t\t\t\ttype={hidePassword_two ? \"password\" : \"input\"}\n\t\t\t\t\t\tInputProps={hidePassword_two ? { \n\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t<VisibilityOffTwoToneIcon\n\t\t\t\t\t\t\t\t\tfontSize=\"default\"\n\t\t\t\t\t\t\t\t\tclassName={classes.passwordEye}\n\t\t\t\t\t\t\t\t\tonClick={showPassword_two}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t} : {\n\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t<VisibilityTwoToneIcon\n\t\t\t\t\t\t\t\t\tfontSize=\"default\"\n\t\t\t\t\t\t\t\t\tclassName={classes.passwordEye}\n\t\t\t\t\t\t\t\t\tonClick={showPassword}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tmarginTop=\"10\"\n\t\t\t\t\t\tname=\"password_two\"\n\t\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\t\tid=\"password_two\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.password_two}\n\t\t\t\t\t\tvalidators={['required' , 'matchRegexp:^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,20})']\n\t\t\t\t\t\t}\n\t\t\t\t\t\terrorMessages={[\n\t\t\t\t\t\t\t'this field is required',\n\t\t\t\t\t\t\t`The password must contain at least 1 lowercase alphabetical character\n\t\t\t\t\t\t\tThe password must contain at least 1 uppercase alphabetical character \n\t\t\t\t\t\t\tThe password must contain at least 1 numeric character\n\t\t\t\t\t\t\tThe string must contain at least one special character\n\t\t\t\t\t\t\tpassword length  should be 8-20` ,\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t\t{/* <h4 id=\"invalid user\" style={{color:'red', alignContent:\"centre\", width:\"auto\", margin:\"auto\"}}></h4> */}\n\t\t\t\t\t{passwordsMatch.error ? (\n\t\t\t\t\t\t<Snackbar\n\t\t\t\t\t\tvariant=\"error\"\n\t\t\t\t\t\tkey={passwordsMatch.error}\n\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\thorizontal: \"center\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t\topen={passwordsMatch.errorOpen}\n\t\t\t\t\t\tonClose={errorClose}\n\t\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<SnackbarContent\n\t\t\t\t\t\t\tclassName={classes.error}\n\t\t\t\t\t\t\tmessage={\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span style={{ marginRight: \"8px\" }}>\n\t\t\t\t\t\t\t\t<ErrorIcon fontSize=\"large\" color=\"error\" />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span> {passwordsMatch.error} </span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taction={[\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tkey=\"close\"\n\t\t\t\t\t\t\t\taria-label=\"close\"\n\t\t\t\t\t\t\t\tonClick={errorClose}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CloseIcon color=\"error\" />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Snackbar>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{message.data ? (\n\t\t\t\t\t\t<Snackbar\n\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\tseverity=\"success\"\n\t\t\t\t\t\tkey={message.data}\n\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\thorizontal: \"center\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t\topen={message.messageOpen}\n\t\t\t\t\t\tonClose={messageClose}\n\t\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<SnackbarContent\n\t\t\t\t\t\t\tclassName={classes.success}\n\t\t\t\t\t\t\tmessage={\n\t\t\t\t\t\t\t<div style={{color:\"green\"}}>\n\t\t\t\t\t\t\t\t<span style={{ marginRight: \"8px\" }}>\n\t\t\t\t\t\t\t\t<CheckCircleOutlineIcon fontSize=\"large\"   />\n\t\t\t\t\t\t\t\t</span >\n\t\t\t\t\t\t\t\t<span> {message.data} </span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taction={[\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tkey=\"close\"\n\t\t\t\t\t\t\t\taria-label=\"close\"\n\t\t\t\t\t\t\t\tonClick={messageClose}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CloseIcon style={{color:\"green\"}} />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Snackbar>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tUpdate Account details\n\t\t\t\t\t</Button>\n\t\t\t\t\t\t\n\t\t\t\t</ValidatorForm>\n\t\t\t</div>\n\t\t</Container>\n\t\t</div>\n  );\n}"]},"metadata":{},"sourceType":"module"}